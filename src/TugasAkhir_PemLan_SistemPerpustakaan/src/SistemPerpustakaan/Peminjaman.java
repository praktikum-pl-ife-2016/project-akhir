/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemPerpustakaan;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RIDWAN
 */
public class Peminjaman extends javax.swing.JFrame {

    Connection con = null;
    Statement stmn = null;
    ResultSet rs = null;
    PreparedStatement psmt = null;
    String SimpanJudul,nim,tgl;
    Date tanggal ;
    ArrayList<String> list = new ArrayList<>();
    ArrayList<String> listKategori = new ArrayList<>();
    /**
     * Creates new form Perpus
     */
    public Peminjaman() {
        initComponents();
        tanggal();
    }
    Menu menu = new Menu();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGambar1 = new Gambar.panelGambar();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        textOKE = new ButtonTransparan.TextButton();
        textBatal = new ButtonTransparan.TextButton();
        LblKategori = new javax.swing.JLabel();
        LblJudul = new javax.swing.JLabel();
        CombKatagorPeminjamani = new javax.swing.JComboBox();
        CombJudulPeminjaman = new javax.swing.JComboBox();
        textTambah = new ButtonTransparan.TextButton();
        jCheckBoxSetuju = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NO", "KATEGORI", "JUDUL BUKU"
            }
        ));
        jScrollPane1.setViewportView(tabel);

        textOKE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textOKEActionPerformed(evt);
            }
        });

        textBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBatalActionPerformed(evt);
            }
        });

        LblKategori.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LblKategori.setText("KATEGORI      :");

        LblJudul.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LblJudul.setText("JUDUL BUKU   :");

        CombKatagorPeminjamani.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-------------------------------Kategori------------------------------------", "Umum", "Sains dan Teknologi", "Sosial Humaniora" }));
        CombKatagorPeminjamani.setBorder(null);
        CombKatagorPeminjamani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombKatagorPeminjamaniActionPerformed(evt);
            }
        });

        CombJudulPeminjaman.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------------------------------Judul Buku-----------------------------------" }));
        CombJudulPeminjaman.setBorder(null);
        CombJudulPeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombJudulPeminjamanActionPerformed(evt);
            }
        });

        textTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTambahActionPerformed(evt);
            }
        });

        jCheckBoxSetuju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSetujuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGambar1Layout = new javax.swing.GroupLayout(panelGambar1);
        panelGambar1.setLayout(panelGambar1Layout);
        panelGambar1Layout.setHorizontalGroup(
            panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGambar1Layout.createSequentialGroup()
                .addGroup(panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGambar1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(textOKE, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(textBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelGambar1Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(textTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelGambar1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jCheckBoxSetuju))
                    .addGroup(panelGambar1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LblKategori)
                            .addComponent(LblJudul))
                        .addGap(32, 32, 32)
                        .addGroup(panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CombJudulPeminjaman, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CombKatagorPeminjamani, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelGambar1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        panelGambar1Layout.setVerticalGroup(
            panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGambar1Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CombKatagorPeminjamani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CombJudulPeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(textTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jCheckBoxSetuju)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(panelGambar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textOKE, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGambar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGambar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxSetujuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSetujuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSetujuActionPerformed

    private void CombJudulPeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombJudulPeminjamanActionPerformed

    }//GEN-LAST:event_CombJudulPeminjamanActionPerformed
    
    private void CombKatagorPeminjamaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombKatagorPeminjamaniActionPerformed
        CombJudulPeminjaman.removeAllItems();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url, user, password;
            url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
            user = "root";
            password = "";
            con = (Connection) DriverManager.getConnection(url, user, password);
            stmn = (Statement) con.createStatement();
            switch (CombKatagorPeminjamani.getSelectedItem().toString()) {
                case "Sosial Humaniora":
                    rs = stmn.executeQuery("SELECT * FROM buku WHERE Katagori = 'IPS'");
                    CombJudulPeminjaman.addItem("------------------------------Judul Buku-----------------------------------");
                    while (rs.next()) {
                        CombJudulPeminjaman.addItem(rs.getString("Judul"));

                    }
                    break;
                case "Sains dan Teknologi":
                    rs = stmn.executeQuery("SELECT * FROM buku WHERE Katagori = 'IPA'");
                    CombJudulPeminjaman.addItem("------------------------------Judul Buku-----------------------------------");
                    while (rs.next()) {
                        CombJudulPeminjaman.addItem(rs.getString("Judul"));

                    }
                    break;
                case "Umum":
                    rs = stmn.executeQuery("SELECT * FROM buku WHERE Katagori = 'Umum'");
                    CombJudulPeminjaman.addItem("------------------------------Judul Buku-----------------------------------");
                    while (rs.next()) {
                        CombJudulPeminjaman.addItem(rs.getString("Judul"));

                    }
            }

            stmn.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
        }
    }//GEN-LAST:event_CombKatagorPeminjamaniActionPerformed

    private void textOKEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textOKEActionPerformed
        if (jCheckBoxSetuju.isSelected()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                String url, user, password;
                url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
                user = "root";
                password = "";
                con = (Connection) DriverManager.getConnection(url, user, password);
                stmn = (Statement) con.createStatement();
                for (int i = 0; i < list.size(); i++) {
                    String SQL = "insert into peminjaman values('" + nim + "','" + tgl + "','" + list.get(i) + "','" +listKategori.get(i)+"');";
                    stmn.execute(SQL);
                }
                stmn.close();
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
            }
            JOptionPane.showMessageDialog( rootPane,"Tanggal Pengembalian "+tgl, "Perhatian", JOptionPane.ERROR_MESSAGE);
            dispose();
        } else {
            JOptionPane.showMessageDialog( rootPane,"Anda Belum Setuju !!!", "Warning", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textOKEActionPerformed

    private void textBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBatalActionPerformed
        dispose();;
    }//GEN-LAST:event_textBatalActionPerformed
    SimpleDateFormat sdfdate = new SimpleDateFormat("dd MMMM yyyy");
    Calendar cal = Calendar.getInstance();
        
    public void tanggal(){
        cal.add(Calendar.DATE, 3); //menghitung 3 hari setelah hari ini
        tanggal = cal.getTime(); //membuat variabel yang bertipe Date yang menyimpan 3 hari setelah hari ini            
    }
    private void textTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTambahActionPerformed
        Menu a = new Menu();
        nim = a.getNIM();
        tgl = sdfdate.format(tanggal);
        list.add(CombJudulPeminjaman.getSelectedItem().toString());
        dataTable();//agar apa yangkita inputan pada textfield langsung muncul pada tabel
    }//GEN-LAST:event_textTambahActionPerformed
public void dataTable(){
        String pengarang = "",penerbit="",tahunTerbit="";
        listKategori.add(CombKatagorPeminjamani.getSelectedItem().toString());
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("NO"); //menambahkan tambel sesuai kolom, sedangkan NIM berfungsi untuk penamaan judul di kolom tersebut
        tbl.addColumn("KATEGORI");
        tbl.addColumn("JUDUL");
        tbl.addColumn("PENGARANG");
        tbl.addColumn("PENERBIT");
        tbl.addColumn("TAHUN TERBIT");
        tabel.setModel(tbl);
        tabel.getColumnModel().getColumn(0).setPreferredWidth(30);
        tabel.getColumnModel().getColumn(1).setPreferredWidth(75);
        tabel.getColumnModel().getColumn(2).setPreferredWidth(125);
        tabel.getColumnModel().getColumn(3).setPreferredWidth(100);
        tabel.getColumnModel().getColumn(4).setPreferredWidth(100);
        
        try {
            for (int i = 0; i < list.size(); i++) {
                try {
                Class.forName("com.mysql.jdbc.Driver");
                String url,user,password;
                url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
                user = "root";
                password = "";
                con = (Connection) DriverManager.getConnection(url, user, password);
                stmn = (Statement) con.createStatement();
                String SQL = "SELECT * FROM buku WHERE Judul = '" + list.get(i) + "'";
                rs = stmn.executeQuery(SQL);
                while (rs.next()) {
                    pengarang = rs.getString("Pengarang");
                    penerbit = rs.getString("Penerbit");
                    tahunTerbit = rs.getString("Tahun Terbit");
                }
                
                 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
            }
                tbl.addRow(new Object[]{
                (i+1), // kolom yang ada, dan menambahkan baris tabel tersebut
                listKategori.get(i),
                list.get(i),
                pengarang,
                penerbit,
                tahunTerbit,
            });
                tabel.setModel(tbl);
                }
            
            stmn.close();
                con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal"); //xampp tidak di start
            } 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Peminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Peminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Peminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Peminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Peminjaman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CombJudulPeminjaman;
    private javax.swing.JComboBox CombKatagorPeminjamani;
    private javax.swing.JLabel LblJudul;
    private javax.swing.JLabel LblKategori;
    private javax.swing.JCheckBox jCheckBoxSetuju;
    private javax.swing.JScrollPane jScrollPane1;
    private Gambar.panelGambar panelGambar1;
    private javax.swing.JTable tabel;
    private ButtonTransparan.TextButton textBatal;
    private ButtonTransparan.TextButton textOKE;
    private ButtonTransparan.TextButton textTambah;
    // End of variables declaration//GEN-END:variables
}
