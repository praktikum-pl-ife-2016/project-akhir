/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemPerpustakaan;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Toshiba
 */
public class Pengembalian extends javax.swing.JFrame {

    /**
     * Creates new form Pengembalian
     */
    ArrayList<String> listbukuyangdipinjam = new ArrayList<>();
    Connection con = null;
    Statement stmn = null;
    ResultSet rs = null;
    PreparedStatement psmt = null;
    String dataPassing;
    String Nama = "";
    String nim = "";
    String Prodi = "";
    String tgl;
    String tgl2;
    ArrayList<String> list = new ArrayList<>();
    ArrayList<String> listKategori = new ArrayList<>();

    public Pengembalian() {
        initComponents();
        setLocationRelativeTo(null);

    }

    public Pengembalian(String data) {
        initComponents();
        setLocationRelativeTo(null);
        this.dataPassing = data;

    }
    Menu a = new Menu();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pengembalian1 = new Gambar.Pengembalian();
        btnBatal = new TextFiels.TextButton();
        btnTambah = new TextFiels.TextButton();
        btnOKE = new TextFiels.TextButton();
        CombKatagoriPengembalian = new javax.swing.JComboBox<>();
        CombJudulPengembalian = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextAreaBiodata = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        btnBatal.setText("textButton1");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnTambah.setText("textButton1");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnOKE.setText("textButton1");
        btnOKE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKEActionPerformed(evt);
            }
        });

        CombKatagoriPengembalian.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------------------------------ Pilih Katagori ------------------------------", "Umum", "Sain dan Teknologi", "Sosial Humaniora" }));
        CombKatagoriPengembalian.setToolTipText("");
        CombKatagoriPengembalian.setBorder(null);
        CombKatagoriPengembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombKatagoriPengembalianActionPerformed(evt);
            }
        });

        CombJudulPengembalian.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------------------------------Judul Buku---------------------------------" }));
        CombJudulPengembalian.setBorder(null);
        CombJudulPengembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombJudulPengembalianActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sintony", 0, 11)); // NOI18N
        jLabel1.setText("KATAGORI      :");

        jLabel2.setFont(new java.awt.Font("Sintony", 0, 11)); // NOI18N
        jLabel2.setText("JUDUL BUKU : ");

        tabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NO", "KATEGORI", "JUDUL BUKU"
            }
        ));
        jScrollPane1.setViewportView(tabel);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("DAFTAR BUKU YANG AKAN DIKEMBALIKAN");

        TextAreaBiodata.setColumns(20);
        TextAreaBiodata.setRows(5);
        jScrollPane2.setViewportView(TextAreaBiodata);

        javax.swing.GroupLayout pengembalian1Layout = new javax.swing.GroupLayout(pengembalian1);
        pengembalian1.setLayout(pengembalian1Layout);
        pengembalian1Layout.setHorizontalGroup(
            pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pengembalian1Layout.createSequentialGroup()
                .addGroup(pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pengembalian1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pengembalian1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pengembalian1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(CombKatagoriPengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pengembalian1Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(CombJudulPengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pengembalian1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pengembalian1Layout.createSequentialGroup()
                        .addComponent(btnOKE, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pengembalian1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(92, 92, 92))))
        );
        pengembalian1Layout.setVerticalGroup(
            pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pengembalian1Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CombKatagoriPengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CombJudulPengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pengembalian1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOKE, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pengembalian1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pengembalian1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        dispose();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnOKEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKEActionPerformed
        Pengembalian b = new Pengembalian();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url, user, password;
            url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
            user = "root";
            password = "";
            con = (Connection) DriverManager.getConnection(url, user, password);
            stmn = (Statement) con.createStatement();
            for (int i = 0; i < list.size(); i++) {
                String SQL = "DELETE FROM `peminjaman` WHERE Judul = '" + list.get(i) + "'&& NIM = '" + a.getNIM() + "'";
                stmn.execute(SQL);
                listbukuyangdipinjam.remove(list.get(i));
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
                user = "root";
                password = "";
                con = (Connection) DriverManager.getConnection(url, user, password);
                stmn = (Statement) con.createStatement();
                String SQL = "SELECT * FROM peminjaman WHERE NIM = '" + a.getNIM() + "'";
                rs = stmn.executeQuery(SQL);
                while (rs.next()) {
                    tgl2 = rs.getString("Tanggal");
                }
                Date tanggal2 = sdfdate.parse(tgl2);

                long bedaHari = Math.abs(tanggal2.getTime() - tanggal.getTime());
                System.out.println("kurang " + TimeUnit.MILLISECONDS.toDays(bedaHari));
                if (tgl.equalsIgnoreCase(tgl2)) {
                    JOptionPane.showMessageDialog(rootPane, "Terima Kasih Telah Menikmati Pelayanan Kami", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
                } else if (tanggal.after(tanggal2)) {
                    long denda = TimeUnit.MILLISECONDS.toDays(bedaHari) * 500;
                    JOptionPane.showMessageDialog(rootPane, "Anda Dikenakan Denda sebesar Rp " + denda
                            + " karena telat " + TimeUnit.MILLISECONDS.toDays(bedaHari) + " hari", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Terima Kasih Telah Menikmati Pelayanan Kami", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
                user = "root";
                password = "";
                con = (Connection) DriverManager.getConnection(url, user, password);
                stmn = (Statement) con.createStatement();
                String SQL = "SELECT * FROM mahasiswa WHERE NIM='" + a.getNIM() + "'";
                rs = stmn.executeQuery(SQL);
                while (rs.next()) {
                    Nama = rs.getString("Nama");
                    nim = rs.getString("NIM");
                    Prodi = rs.getString("Jurusan");
                }
                stmn.close();
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
                user = "root";
                password = "";
                con = (Connection) DriverManager.getConnection(url, user, password);
                stmn = (Statement) con.createStatement();
                String SQL = "SELECT * FROM peminjaman WHERE NIM='" + a.getNIM() + "'";
                rs = stmn.executeQuery(SQL);
                stmn.close();
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
            }
            TextAreaBiodata.setText(
                    "Nama    : " + Nama
                    + "\nNIM        : " + nim
                    + "\nJurusan : " + Prodi
                    + "\n===================================================="
                    + "\n==========BUKU YANG BELUM DIKEMBALIKAN=============="
                    + buku());
            stmn.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
        }
        System.out.println(tgl2);
    }//GEN-LAST:event_btnOKEActionPerformed

    private void CombKatagoriPengembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombKatagoriPengembalianActionPerformed

        CombJudulPengembalian.removeAllItems();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url, user, password;
            url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
            user = "root";
            password = "";
            con = (Connection) DriverManager.getConnection(url, user, password);
            stmn = (Statement) con.createStatement();
            switch (CombKatagoriPengembalian.getSelectedItem().toString()) {
                case "Sosial Humaniora":
                    rs = stmn.executeQuery("SELECT * FROM peminjaman WHERE Katagori = 'Sosial Humaniora'&& NIM = '" + a.getNIM() + "'");
                    CombJudulPengembalian.addItem("------------------------------Judul Buku-----------------------------------");
                    while (rs.next()) {
                        CombJudulPengembalian.addItem(rs.getString("Judul"));

                    }
                    break;
                case "Sain dan Teknologi":
                    rs = stmn.executeQuery("SELECT * FROM peminjaman WHERE Katagori = 'Sains dan Teknologi'&& NIM = '" + a.getNIM() + "'");
                    CombJudulPengembalian.addItem("------------------------------Judul Buku-----------------------------------");
                    while (rs.next()) {
                        CombJudulPengembalian.addItem(rs.getString("Judul"));

                    }
                    break;
                case "Umum":
                    rs = stmn.executeQuery("SELECT * FROM peminjaman WHERE Katagori = 'Umum'&& NIM = '" + a.getNIM() + "'");
                    CombJudulPengembalian.addItem("------------------------------Judul Buku-----------------------------------");
                    while (rs.next()) {
                        CombJudulPengembalian.addItem(rs.getString("Judul"));

                    }
            }

            stmn.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
        }
    }//GEN-LAST:event_CombKatagoriPengembalianActionPerformed

    private void CombJudulPengembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombJudulPengembalianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CombJudulPengembalianActionPerformed
    SimpleDateFormat sdfdate = new SimpleDateFormat("dd MMMM yyyy");
    Date tanggal = new Date();
    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        nim = a.getNIM();
        tgl = sdfdate.format(tanggal);
        list.add(CombJudulPengembalian.getSelectedItem().toString());
        dataTable();//agar apa yangkita inputan pada textfield langsung muncul pada tabel
    }//GEN-LAST:event_btnTambahActionPerformed
    public void dataTable() {
        listKategori.add(CombKatagoriPengembalian.getSelectedItem().toString());
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("NO"); //menambahkan tambel sesuai kolom, sedangkan NIM berfungsi untuk penamaan judul di kolom tersebut
        tbl.addColumn("KATEGORI");
        tbl.addColumn("JUDUL");
        tabel.setModel(tbl);
        tabel.getColumnModel().getColumn(0).setPreferredWidth(25);
        tabel.getColumnModel().getColumn(1).setPreferredWidth(75);
        tabel.getColumnModel().getColumn(2).setPreferredWidth(125);
        try {
            for (int i = 0; i < list.size(); i++) {
                tbl.addRow(new Object[]{
                    (i + 1), // kolom yang ada, dan menambahkan baris tabel tersebut
                    listKategori.get(i),
                    list.get(i),});
                tabel.setModel(tbl);
            }

            stmn.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal"); //xampp tidak di start
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pengembalian().setVisible(true);
            }
        });

    }

    public void dataTextArea() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url, user, password;
            url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
            user = "root";
            password = "";
            con = (Connection) DriverManager.getConnection(url, user, password);
            stmn = (Statement) con.createStatement();
            String SQL = "SELECT * FROM mahasiswa WHERE NIM='" + a.getNIM() + "'";
            rs = stmn.executeQuery(SQL);
            while (rs.next()) {
                Nama = rs.getString("Nama");
                nim = rs.getString("NIM");
                Prodi = rs.getString("Jurusan");
            }
            stmn.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url, user, password;
            url = "jdbc:mysql://localhost:3306/databuku"; //alamat DB
            user = "root";
            password = "";
            con = (Connection) DriverManager.getConnection(url, user, password);
            stmn = (Statement) con.createStatement();
            String SQL = "SELECT * FROM peminjaman WHERE NIM='" + a.getNIM() + "'";
            rs = stmn.executeQuery(SQL);
            while (rs.next()) {
                listbukuyangdipinjam.add(rs.getString("Judul"));
            }

            stmn.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Gagal! " + e);
        }
        TextAreaBiodata.setText(
                "Nama    : " + Nama
                + "\nNIM     : " + nim
                + "\nJurusan : " + Prodi
                + "\n===================================================="
                + "\n==========BUKU YANG HARUS DIKEMBALIKAN=============="
                + buku());

    }

    public String buku() {
        String buku = "";
        for (int i = 0; i < listbukuyangdipinjam.size(); i++) {
            buku += "\n" + (i + 1) + ". " + listbukuyangdipinjam.get(i);
        }
        return buku;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CombJudulPengembalian;
    private javax.swing.JComboBox<String> CombKatagoriPengembalian;
    private javax.swing.JTextArea TextAreaBiodata;
    private TextFiels.TextButton btnBatal;
    private TextFiels.TextButton btnOKE;
    private TextFiels.TextButton btnTambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private Gambar.Pengembalian pengembalian1;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
}
